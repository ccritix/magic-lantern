#User-defined values for ML build system
#Copy me to Makefile.user, keeping ONLY the options that you want to customize

UNAME:=$(shell uname)

ifeq ($(UNAME), Darwin)
	# Variable declaration for Mac OS X
	UMOUNT=hdiutil unmount
	CF_CARD="/Volumes/EOS_DIGITAL"
	STAT_CMD=stat -f "%N: %z bytes"
else
	# Default settings for remaining operating systems
	UMOUNT=umount
	CF_CARD="/media/EOS_DIGITAL/"
	STAT_CMD=stat -c "%n: %s bytes"
endif

# Supported camera models
SUPPORTED_MODELS:=60D 550D 600D 50D 500D 5D2 1100D

# GCC-related stuff
# for yagarto or the official ARM toolchain use ARM_ABI=none-eabi otherwise use ARM_ABI=elf
ARM_ABI=none-eabi
GCC_VERSION=4.7.3
ARM_PATH=~/gcc-arm-none-eabi-4_7-2012q4
ARM_BINPATH=$(ARM_PATH)/bin

ifeq ($(OS),Windows_NT)
CC=$(ARM_BINPATH)/arm-$(ARM_ABI)-gcc-$(GCC_VERSION).exe
else
CC=$(ARM_BINPATH)/arm-$(ARM_ABI)-gcc-$(GCC_VERSION)
endif

LD=$(CC)
OBJCOPY=$(ARM_BINPATH)/arm-$(ARM_ABI)-objcopy
OBJDUMP=$(ARM_BINPATH)/arm-$(ARM_ABI)-objdump
AR=$(ARM_BINPATH)/arm-$(ARM_ABI)-ar
RANLIB=$(ARM_BINPATH)/arm-$(ARM_ABI)-ranlib
READELF=$(ARM_BINPATH)/arm-$(ARM_ABI)-readelf
LD_REAL=$(ARM_BINPATH)/arm-$(ARM_ABI)-ld

# You can customize CFLAG here
HOST_CFLAGS=-g -O3 -W -Wall
#CFLAG_USER = -march=armv5te -mcpu=arm946e-s -O2 -DCONFIG_RELEASE_BUILD \

# Additional binaries
HOST_CC=which gcc
CCACHE=ccache
GREP=grep
AWK=awk
PYTHON=python2

NIGHTLY_ROOT:=$(HOME)/public_html/nightly
NIGHTLY_ARCHIVE:=$(NIGHTLY_ROOT)/archive
NIGHTLY_DIR:=$(NIGHTLY_ARCHIVE)/$(shell date +'%Y-%m-%d')-$(shell hg id -i -r .)

# Naming convention for Magic Lantern builds:
# General rules:
# - Always specify the camera and its firmware version number in the build name (e.g. 550d.fw109)
# - For non-release builds, specify the build date and author's (nick)name.
# - For experimental builds, add a short keyword indicating the particular feature tested.

# Examples for experimental builds:
# magiclantern-2010dec07.550d.fw108.cropmarks.a1ex.zip 
# magiclantern-2010nov23.550d.fw108.selectable-audio.piers.zip 

# Example for pre-release builds:
# magiclantern-2010dec17.550d.fw109.PRERELEASE.alex.zip

# Release builds:
# magiclantern-0.2.0.rc1.550d.fw109.zip
#~ VERSION=0.2.0.rc1.550d.fw109
BUILDVER=$(shell whoami).$(shell hg id -i -r .)
VERSION:=v2.3.NEXT.$(shell LC_TIME=EN date +'%Y%b%d').$(MODEL)$(FW_VERSION)

# Build configuration - untested and debug stuff handy for devs
CONFIG_PYMITE       = n
ifndef CONFIG_RELOC
CONFIG_RELOC        = n
endif
CONFIG_TIMECODE     = n
CONFIG_PTP          = n
CONFIG_PTP_CHDK     = n
CONFIG_PTP_ML       = n
ifndef CONFIG_GDB
CONFIG_GDB          = n
endif
CONFIG_GDBSTUB      = n
CONFIG_PLUGINS      = n
ifndef CONFIG_CONSOLE
CONFIG_CONSOLE      = y
endif
CONFIG_DEBUGMSG     = 0
CONFIG_CCACHE       = n
ifndef CONFIG_PICOC
CONFIG_PICOC        = y
endif
CONFIG_TCC          = n
CONFIG_MEMCHECK     = n
CONFIG_MODULES      = n
CONFIG_TINYPY       = n

# Work in progress - would be nice to run the unmodified autoexec.bin in QEMU, but we are not there yet
# so, for now, we'll just hack the source code to work around the limitations of the emulator
CONFIG_QEMU         = n
