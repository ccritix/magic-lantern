#!/usr/bin/perl
# Apply a patch to a binary image.
use warnings;
use strict;
use File::Slurp;

my $fail = 0;
my $pass = 0;
my $file = shift;

my $image = read_file( $file, {binmode => ':raw'} )
	or die "$0: Unable to read $file: $!\n";


while(<>)
{
	s/[\r\n]//g;

	next if /^Comparing files/;

	my ($offset,$from,$to) = m/
		^
		([0-9A-Fa-f]+):
		\s+
		([0-9A-Fa-f]+)
		\s+
		([0-9A-Fa-f]+)
	$/x or warn "Unable to parse: '$_'\n" and next;

	$offset = hex $offset;
	$from = chr( hex $from );
	$to = chr( hex $to );

	if( substr( $image, $offset, 1) eq $from )
	{
		substr( $image, $offset, 1 ) = $to;
		$pass++;
		next;
	}

	printf STDERR "%08x: %02x != %02x!\n",
		$offset,
		ord( $from ),
		ord( substr( $image, $offset, 1 ) ),
		;

	$fail++;
}

die "$0: $fail errors reported\n" if $fail;

warn "$0: $file: patched $pass bytes\n";
write_file( $file, $image );
__END__
