#!/usr/bin/perl
# Assemble a hacked firmware image for the 5D Mark 2 from
# the dumped images and the replacement user code
# 
# (c) Trammell Hudson
#
use warnings;
use strict;
use Getopt::Long;
use File::Slurp;

#
# This is the Worst. Checksum algorithm. Ever.
#
# It has no security or ability to detect byte order
# errors.  It is literally the sum of the bytes!
#
sub checksum
{
	my $image = shift;
	my $sum = 0;
	for( my $i=0 ; $i<length $image ; $i ++ )
	{
		$sum += ord( substr( $image, $i, 1 ) );
	}

	return ~$sum;
}

for my $file (@ARGV)
{
	my $image = read_file( $file )
		or warn "$file: $!\n"
		and next;

	# Zero the CRC and recalc it
	my $old_crc = unpack( "V", substr( $image, 0x20, 4 ) );
	substr( $image, 0x20, 4 ) = chr(0) x 4;

	my $crc = checksum( $image );
	substr( $image, 0x20, 4 ) = pack( "V", $crc );
	printf "$file: New CRC: %08x OLD %08x\n", $crc, $old_crc;

	# Write out the file
	write_file( $file, { binmode => ':raw' }, $image );
}
