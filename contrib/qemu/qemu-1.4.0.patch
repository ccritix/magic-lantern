diff -r 9f058bee9211 hw/arm/Makefile.objs
--- a/hw/arm/Makefile.objs	Thu Apr 04 00:27:56 2013 +0300
+++ b/hw/arm/Makefile.objs	Mon Apr 08 00:23:38 2013 +0300
@@ -30,6 +30,7 @@
 obj-y += collie.o
 obj-y += imx_serial.o imx_ccm.o imx_timer.o imx_avic.o
 obj-y += kzm.o
+obj-y += eos.o
 obj-$(CONFIG_FDT) += ../device_tree.o
 
 obj-y := $(addprefix ../,$(obj-y))
diff -r 9f058bee9211 memory.c
--- a/memory.c	Thu Apr 04 00:27:56 2013 +0300
+++ b/memory.c	Mon Apr 08 00:23:38 2013 +0300
@@ -1321,13 +1321,13 @@
         if (subregion->may_overlap || other->may_overlap) {
             continue;
         }
-        if (int128_gt(int128_make64(offset),
+        if (int128_ge(int128_make64(offset),
                       int128_add(int128_make64(other->addr), other->size))
             || int128_le(int128_add(int128_make64(offset), subregion->size),
                          int128_make64(other->addr))) {
             continue;
         }
-#if 0
+#if 1
         printf("warning: subregion collision %llx/%llx (%s) "
                "vs %llx/%llx (%s)\n",
                (unsigned long long)offset,
@@ -1355,6 +1355,7 @@
                                  hwaddr offset,
                                  MemoryRegion *subregion)
 {
+    fprintf(stderr, "%08X - %08X: %s\n", (int)offset, (int)offset + (int)subregion->size.lo - 1, subregion->name);
     subregion->may_overlap = false;
     subregion->priority = 0;
     memory_region_add_subregion_common(mr, offset, subregion);
diff -r 9f058bee9211 target-arm/cpu.c
--- a/target-arm/cpu.c	Thu Apr 04 00:27:56 2013 +0300
+++ b/target-arm/cpu.c	Mon Apr 08 00:23:38 2013 +0300
@@ -233,6 +233,17 @@
     cpu->reset_sctlr = 0x00090078;
 }
 
+static void arm946eos_initfn(Object *obj)
+{
+    ARMCPU *cpu = ARM_CPU(obj);
+    set_feature(&cpu->env, ARM_FEATURE_V5);
+    set_feature(&cpu->env, ARM_FEATURE_MPU);
+    set_feature(&cpu->env, ARM_FEATURE_DUMMY_C15_REGS);
+    cpu->midr = 0x41059461;
+    cpu->ctr = (7<<25) | (1<<24) | (4<<18) | (4<<15) | (2<<12) | (4<<6) | (4<<3) | (2<<0);
+    cpu->reset_sctlr = 0x00000078;
+}
+
 static void arm946_initfn(Object *obj)
 {
     ARMCPU *cpu = ARM_CPU(obj);
@@ -745,6 +756,7 @@
 
 static const ARMCPUInfo arm_cpus[] = {
     { .name = "arm926",      .initfn = arm926_initfn },
+    { .name = "arm946eos",   .initfn = arm946eos_initfn },
     { .name = "arm946",      .initfn = arm946_initfn },
     { .name = "arm1026",     .initfn = arm1026_initfn },
     /* What QEMU calls "arm1136-r2" is actually the 1136 r0p2, i.e. an
