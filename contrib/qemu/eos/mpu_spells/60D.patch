--- 60D.h
+++ 60D.h
@@ -1,3 +1,7 @@
+ /**
+ * These values are valid for a 60D.
+ */
+
 static struct mpu_init_spell mpu_init_spells_60D[] = {
     { { 0x06, 0x04, 0x02, 0x00, 0x00 }, {                       /* spell #1 */
         { 0x08, 0x07, 0x01, 0x33, 0x09, 0x00, 0x00, 0x00 },     /* reply #1.1 */
@@ -118,7 +122,7 @@
         { 0 } } },
     { { 0x26, 0x24, 0x09, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, {/* spell #27 */
         { 0 } } },
-    { { 0x0a, 0x08, 0x09, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00 }, {/* spell #28 */
+    { { 0x0a, 0x08, 0x09, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00 }, { /* spell #28 */
         { 0 } } },
     { { 0x08, 0x06, 0x03, 0x18, 0x00, 0x00, 0x00 }, {           /* spell #29 */
         { 0 } } },
@@ -163,4 +167,100 @@
         { 0 } } },
     { { 0x06, 0x05, 0x03, 0x19, 0x00, 0x00 }, {                 /* spell #43 */
         { 0 } } },
+
+    #include "NotifyGUIEvent.h"
+    #include "UILock.h"
+    #include "CardFormat.h"
+    #include "Shutdown.h"
 };
+
+/**
+ * Alternative version: send everything after the first message,
+ * with one exception: delay GUI-related messages.
+ */
+#if 0
+static struct mpu_init_spell mpu_init_spells_60D[] = {
+    { { 0x06, 0x04, 0x02, 0x00, 0x00 }, {
+        { 0x08, 0x07, 0x01, 0x33, 0x09, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x20, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x21, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x22, 0x00, 0x00 },
+        { 0x06, 0x05, 0x03, 0x0c, 0x01, 0x00 },
+        { 0x06, 0x05, 0x03, 0x0d, 0x01, 0x00 },
+        { 0x06, 0x05, 0x03, 0x0e, 0x01, 0x00 },
+        { 0x08, 0x06, 0x01, 0x23, 0x00, 0x01, 0x00 },
+        { 0x08, 0x06, 0x01, 0x24, 0x00, 0x00, 0x00 },
+        { 0x08, 0x06, 0x01, 0x25, 0x00, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x2e, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x2c, 0x02, 0x00 },
+        { 0x06, 0x05, 0x03, 0x20, 0x04, 0x00 },
+        { 0x06, 0x05, 0x01, 0x3d, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x42, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x00, 0x03, 0x00 },
+        { 0x2c, 0x2a, 0x02, 0x00, 0x03, 0x03, 0x03, 0x04, 0x03, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x14, 0x50, 0x00, 0x00, 0x00, 0x00, 0x81, 0x06, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x4b, 0x01 },
+        { 0x0c, 0x0b, 0x01, 0x0a, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x37, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x49, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x3e, 0x00, 0x00 },
+        { 0x08, 0x06, 0x01, 0x45, 0x00, 0x10, 0x00 },
+        { 0x06, 0x05, 0x01, 0x48, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x4b, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x40, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x41, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x3f, 0x00, 0x00 },
+        { 0x1a, 0x18, 0x01, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x48, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x53, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x4a, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x50, 0x03, 0x00 },
+        { 0x08, 0x06, 0x01, 0x51, 0x70, 0x48, 0x00 },
+        { 0x06, 0x05, 0x01, 0x52, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x54, 0x00, 0x00 },
+        { 0x06, 0x05, 0x03, 0x37, 0x00, 0x00 },
+        { 0x0e, 0x0c, 0x02, 0x05, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x0a, 0x08, 0x02, 0x06, 0x04, 0x00, 0x00, 0x00, 0x00 },
+        { 0x0c, 0x0a, 0x02, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x0c, 0x0a, 0x02, 0x08, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x0a, 0x08, 0x03, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x03, 0x05, 0x02, 0x00 },
+        { 0x1e, 0x1c, 0x03, 0x30, 0x65, 0x65, 0x50, 0x50, 0x53, 0x53, 0x53, 0x53, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00 },
+        { 0x0e, 0x0c, 0x03, 0x2e, 0x00, 0x00, 0x83, 0xad, 0x00, 0x00, 0xdb, 0x71, 0x00 },
+        { 0x06, 0x05, 0x03, 0x35, 0x01, 0x00 },
+        { 0x1c, 0x1b, 0x03, 0x1d, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x50, 0x2d, 0x45, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xae, 0x7e, 0x3b, 0x61, 0x00 },
+        { 0x06, 0x04, 0x03, 0x36, 0x00 },
+        { 0x08, 0x07, 0x01, 0x55, 0x00, 0x02, 0x01, 0x01 },
+        { 0x06, 0x05, 0x01, 0x2e, 0x01, 0x00 },
+        { 0x06, 0x05, 0x03, 0x38, 0x95, 0x00 },
+        { 0x08, 0x06, 0x01, 0x24, 0x00, 0x01, 0x00 },
+        { 0x06, 0x05, 0x01, 0x2c, 0x02, 0x00 },
+        { 0x0a, 0x08, 0x03, 0x00, 0x6c, 0x00, 0x00, 0x2f, 0x00 },
+        { 0x06, 0x05, 0x03, 0x04, 0x00, 0x00 },
+        { 0x1a, 0x18, 0x03, 0x15, 0x01, 0x2d, 0x58, 0x00, 0x30, 0x00, 0x12, 0x00, 0x37, 0x91, 0x75, 0x92, 0x1f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00 },
+        { 0x24, 0x22, 0x03, 0x3c, 0x00, 0x00, 0x88, 0xb5, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x03, 0x17, 0x92, 0x00 },
+        { 0x06, 0x05, 0x03, 0x23, 0x19, 0x00 },
+        { 0x1e, 0x1d, 0x03, 0x24, 0x45, 0x46, 0x2d, 0x53, 0x31, 0x38, 0x2d, 0x35, 0x35, 0x6d, 0x6d, 0x20, 0x66, 0x2f, 0x33, 0x2e, 0x35, 0x2d, 0x35, 0x2e, 0x36, 0x20, 0x49, 0x53, 0x00, 0x00 },
+        { 0x06, 0x04, 0x03, 0x25, 0x00 },
+        { 0x06, 0x05, 0x01, 0x3d, 0x00, 0x00 },
+        { 0x06, 0x05, 0x03, 0x37, 0x00, 0x00 },
+        { 0x06, 0x05, 0x03, 0x0d, 0x00, 0x00 },
+        { 0x1a, 0x18, 0x03, 0x15, 0x01, 0x2d, 0x58, 0x00, 0x30, 0x00, 0x12, 0x00, 0x37, 0x91, 0x75, 0x92, 0x1f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00 },
+        { 0x06, 0x05, 0x03, 0x0c, 0x00, 0x00 },
+        { 0x1a, 0x18, 0x01, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x53, 0x00, 0x00 },
+        { 0x1a, 0x18, 0x01, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x01, 0x53, 0x00, 0x00 },
+        { 0 } } },
+    { { 0x06, 0x05, 0x02, 0x0a, 0x01, 0x00 }, {     /* wait for this message before continuing */
+        { 0x06, 0x05, 0x06, 0x11, 0x01, 0x00 },     /* although not correct (it's probably sensor cleaning related), this trick appears to launch the GUI */
+        { 0x06, 0x05, 0x06, 0x12, 0x00, 0x00 },
+        { 0x06, 0x05, 0x06, 0x13, 0x00, 0x00 },
+        { 0x42, 0x41, 0x0a, 0x08, 0xff, 0x1f, 0x01, 0x00, 0x01, 0x01, 0xa0, 0x10, 0x00, 0x4d, 0x01, 0x01, 0x58, 0x2d, 0x4b, 0x01, 0x01, 0x00, 0x48, 0x04, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
+        { 0x06, 0x05, 0x04, 0x0e, 0x01, 0x00 },
+        { 0x06, 0x05, 0x03, 0x35, 0x01, 0x00 },
+        { 0x1c, 0x1b, 0x03, 0x1d, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x50, 0x2d, 0x45, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xae, 0x7e, 0x3b, 0x61, 0x00 },
+        { 0x06, 0x04, 0x03, 0x36, 0x00 },
+        { 0x06, 0x05, 0x08, 0x06, 0x00, 0x00 },
+        { 0 } } },
+};
+#endif
