TOP_DIR?=../..
ML_SETUP_DISABLE_USER_CONFIGS=y
ML_SETUP_EXTENSION=modules

include $(TOP_DIR)/Makefile.setup

# should we define a platform for modules? for now use 'all' platform
PLATFORM_INC=$(TOP_DIR)/platform/all
CFLAGS += -DMODULE -DMODULE_NAME=$(MODULE_NAME) $(MODULE_CFLAGS)

MODULE_OUTPUT = $(MODULE_NAME).mo
MODULE_SYM = $(MODULE_NAME).sym
MODULE_DEP = $(MODULE_NAME).dep

all:: $(MODULE_OUTPUT) $(MODULE_SYM) $(MODULE_DEP)

clean::
	$(call rm_files, $(MODULE_OBJS) $(MODULE_OUTPUT) $(MODULE_SYM) $(MODULE_DEP) *.o *.d)

$(MODULE_OUTPUT): $(MODULE_OBJS)
	$(call build,MODULE,$(LD_REAL) -r -o $@ $^)
	$(call build,STRIP,$(STRIP) --strip-debug --strip-unneeded --discard-all --discard-locals $@)

%.sym: %.mo
	$(call build,EXPORTS,$(READELF) -sW $< | grep GLOBAL | grep -v UND | grep -v COM | grep -v "__module_.*$(MODULE_NAME)" | $(AWK) '{print $$2 " " $$8;}' | sort > $@ && cat $@)
%.dep: %.mo
	$(call build,DEPENDS,$(READELF) -sW $< | $(GREP) GLOBAL | $(GREP) 00000000 | $(GREP) UND | $(AWK) '{print $$8;}' | sort > $@ && cd $(MODULES_DIR) && python checkdep.py $(MODULE_NAME))


install:: all
	$(CP) $(PWD)/$(MODULE_OUTPUT) $(INSTALL_MODULES_DIR)/

FORCE:

include $(TOP_DIR)/Makefile.filerules
